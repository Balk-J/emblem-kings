namespace = duel_output
######################
# Duel Engine Output #
######################
# Galle (Gregory Hayes)
######################
# duel_output.1	Collect your output from the duel engine.

character_event = {
	id = duel_output.1
	desc = "EVTDESCDUELOUTPUT1"
	picture = GFX_evt_duel
	
	is_triggered_only = yes
	
	option = {
		name = "EVTOPTADUELOUTPUT1"
		
		# Clear duel_rounds counter and tactic flags
		hidden_tooltip = {
			set_variable = { which = duel_rounds value = 0 }
			clr_character_flag = duel_tactic_speed
			clr_character_flag = duel_tactic_force
			clr_character_flag = duel_tactic_defense
			FROM = { 
				set_variable = { which = duel_rounds value = 0 }
				clr_character_flag = duel_tactic_speed
				clr_character_flag = duel_tactic_force
				clr_character_flag = duel_tactic_defense
			}
		}
		
		# Way of Life - War Focus success
		hidden_tooltip = {
			if = {
				limit = { 
					has_focus = focus_war
					has_dlc = "Way of Life"
				}
				character_event = { id = WoL.11200 days = 3 } # fire focus success
			}
		}
		
		########################
		# Example Output Block #
		########################
		if = {
			##########################
			# Find your context flags
			limit = {
				has_character_flag = flag_battlefield_duel
				has_character_flag = flag_killed_opponent
			}
			##########################
			# Call the next event in your event chain
			# FROM will be Winner scope
			# FROMFROM will be Loser scope
			character_event = { id = battle.11 tooltip = "EVTTOOLTIPbattle.11" }
			##########################
			# CLEAR YOUR CONTEXT FLAGS
			clr_character_flag = flag_battlefield_duel
			FROM = { clr_character_flag = flag_battlefield_duel }
			clr_character_flag = duel_context_battle
			FROM = { clr_character_flag = duel_context_battle }
			###########################
		}
		
		if = {
			###########################
			# If a kill versus a yield would be important,
			# handle them in seperate blocks.
			limit = {
				has_character_flag = flag_battlefield_duel
				has_character_flag = flag_spared_opponent
			}
			if = {
				limit = { is_ruler = yes }
				FROM = { imprison = ROOT }
			}
			if = {
				limit = { is_ruler = no }
				liege = { 
					FROM = { imprison = PREV } 
					hidden_tooltip = { character_event = { id = duel.10700 } }
				}
			}
			hidden_tooltip = { FROM = { character_event = { id = battle.13 } } } 
			clr_character_flag = flag_battlefield_duel
			FROM = { clr_character_flag = flag_battlefield_duel }
			############################
		}
		if = {
			limit = { has_character_flag = flag_battlefield_duel_vs_kingsguard }
			random_opinion_modifier_target = {
				limit = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_kingsguard_protection } }
				character_event = { id = battle.14 tooltip = "EVTTOOLTIPbattle.14" }
			}
			clr_character_flag = flag_battlefield_duel_vs_kingsguard
			FROM = { clr_character_flag = flag_battlefield_duel_kingsguard }
		}
		if = {
			limit = {
				has_character_flag = flag_battlefield_duel_kingsguard
				has_character_flag = flag_killed_opponent
			}
			random_opinion_modifier_target = {
				limit = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_kingsguard_protection } }
				character_event = { id = battle.16 tooltip = "EVTTOOLTIPbattle.16" }
			}
			clr_character_flag = flag_battlefield_duel_vs_kingsguard
			FROM = { clr_character_flag = flag_battlefield_duel_kingsguard }
		}
		if = {
			limit = {
				has_character_flag = flag_battlefield_duel_kingsguard
				has_character_flag = flag_spared_opponent
			}
			random_opinion_modifier_target = {
				limit = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_kingsguard_protection } }
				character_event = { id = battle.17 tooltip = "EVTTOOLTIPbattle.17" }
			}
			clr_character_flag = flag_battlefield_duel_vs_kingsguard
			FROM = { clr_character_flag = flag_battlefield_duel_kingsguard }
		}
		# End of Example Block
		#############################
		
		
		###ToJ event chain
		if = {
			limit = {
				has_character_flag = TOJ_duel_ned
			}
			kingsguard_protection_target = {
				limit = {
					is_alive = yes
					has_character_flag = tower_of_joy
				}
				character_event = { id = tower_of_joy.8 }
			}
			clr_character_flag = TOJ_duel_ned
			FROM = { clr_character_flag = TOJ_duel_KG remove_trait = wikid }
		}
		if = {
			limit = {
				has_character_flag = TOJ_duel_KG
			}
			kingsguard_protection_target = {
				limit = {
					is_alive = yes
					has_character_flag = tower_of_joy
				}
				character_event = { id = tower_of_joy.9 }
			}
			clr_character_flag = TOJ_duel_KG
			FROM = { clr_character_flag = TOJ_duel_ned }
			if = {
				limit = {
					FROM = { trait = kingsguard_protection_target }
				}
				FROM = { remove_trait = kingsguard_protection_target }
				character_event = { id = tower_of_joy.19 }
			}
		}
		###End ToJ event chain
		
		###Trial by Combat
		if = { #Defendant Loses
			limit = { has_character_flag = elected_champion }
			clr_character_flag = elected_champion
			if = {
				limit = { 
					trait = kingsguard
					NOT = { liege = { has_landed_title = e_iron_throne } }
					e_iron_throne = {
						holder_scope = {
							has_opinion_modifier = { who = ROOT modifier = champion_of_liege }
							has_character_flag = trial_by_combat							
						}
					}
				}	
				e_iron_throne = {
					holder_scope = {
						if = { #Kingsguard defeats defendent
							limit = { NOT = { has_character_flag = prisoner_has_champion } }
							character_event = { id = trial_by_combat.11 }
						}	
						if = { #Kingsguard defeats defendent's champion
							limit = { has_character_flag = prisoner_has_champion }
							random_courtier = {
								limit = { has_opinion_modifier = { who = PREV modifier = host_of_prisoner } }
								character_event = { id = trial_by_combat.20 tooltip = "EVTTOOLTIPtrial_by_combat.26" }
							}
						}
					}
				}
			}
			if = {
				limit = { 
					liege = {
						has_opinion_modifier = { who = ROOT modifier = champion_of_liege }
					}
				}	
				liege = { 
					if = { #Champion defeats defendent
						limit = { NOT = { has_character_flag = prisoner_has_champion } }
						character_event = { id = trial_by_combat.11 }
					}	
					if = { #Champion defeats defendent's champion
						limit = { has_character_flag = prisoner_has_champion }
						random_courtier = {
							limit = { has_opinion_modifier = { who = PREV modifier = host_of_prisoner } }
							character_event = { id = trial_by_combat.20 tooltip = "EVTTOOLTIPtrial_by_combat.26" }
						}
					} 
				}
			}		
			if = {
				limit = { 
					has_character_flag = self_elected_champion #Host defeats defendent
				}	
				clr_character_flag = self_elected_champion 
				clr_character_flag = elected_champion 
				clr_character_flag = trial_by_combat
				clr_character_flag = prisoner_has_champion
				character_event = { id = trial_by_combat.11 }
			}
			if = {
				limit = { 
					has_character_flag = self_elected_champion_b  #Host defeats defendent's champion
				}	
				clr_character_flag = self_elected_champion 
				clr_character_flag = elected_champion 
				clr_character_flag = trial_by_combat
				clr_character_flag = prisoner_has_champion
				random_courtier = {
					limit = { has_opinion_modifier = { who = PREV modifier = host_of_prisoner } }
					character_event = { id = trial_by_combat.20 tooltip = "EVTTOOLTIPtrial_by_combat.26" }
				}
			}
			FROM = {
				clr_character_flag = champion_of_relative
				clr_character_flag = champion_of_liege
			}
		}
		if = {
			limit = {
				has_character_flag = demmanded_trial_by_combat #Defendent wins
			}
			clr_character_flag = demmanded_trial_by_combat				
			tooltip = { prisoner = no }
			#One year diplomatic immunity	
			hidden_tooltip = {
				diplomatic_immunity = yes
				character_event = { id = trial.500 days = 365 }
			}	
			host = { character_event = { id = trial_by_combat.12 } }
		}
		if = {
			limit = {
				has_character_flag = champion_of_relative #Defendent's champion wins
			}
			clr_character_flag = champion_of_relative
			assign_mission_target = {
				limit = { 
					has_opinion_modifier = { who = PREV modifier = champion_of_relative } 
					has_character_flag = demmanded_trial_by_combat
					prisoner = yes
				}
				tooltip = { prisoner = no }
				#One year diplomatic immunity	
				hidden_tooltip = {
					diplomatic_immunity = yes
					character_event = { id = trial.500 days = 365 }
				}
				character_event = { id = trial_by_combat.22 }
			}
		}
		if = {
			limit = {
				has_character_flag = lunatic_trial #Lunatic wins
			}
			clr_character_flag = demmanded_trial_by_combat
			character_event = { id = trial_by_combat.12 }
		}
		###End of trial by combat
		
		###Reaving duel
		if = {
			limit = {
				has_character_flag = reaving_duel
			}
			clr_character_flag = reaving_duel
			FROM = { clr_character_flag = reaving_duel_target }
			if = {
				limit = { FROM = { has_artifact = valyrian_steel } }			
				custom_tooltip = { text = TOOLTIPREAVINGDUELVS }
				hidden_tooltip = { 
					add_artifact = valyrian_steel 
					if = { #AI names sword
						limit = { ai = yes }
						new_artifact = { set_name = [Root.GetSwordName] }
					}
				}
			}
			if = {
				limit = { has_character_flag = reaving_begins }
				any_opinion_modifier_target = {
					limit = {
						trait = on_reaving
						has_opinion_modifier = { who = ROOT modifier = opinion_on_reaving }
						ai = no
					}
					hidden_tooltip = { character_event = { id = raid_events.22 days = 1 } }
				}		
			}
			random_opinion_modifier_target = {
				limit = { 
					has_character_flag = reaving_begins
					reverse_has_opinion_modifier = { who = ROOT modifier = opinion_on_reaving } 
				}
				hidden_tooltip = { character_event = { id = raid_events.22 days = 1 } }
				any_opinion_modifier_target = {
					limit = {
						trait = on_reaving
						NOT = { character = ROOT }
						has_opinion_modifier = { who = PREV modifier = opinion_on_reaving }
						ai = no
					}
					hidden_tooltip = { character_event = { id = raid_events.22 days = 1 } }
				}
			}
		}
		if = {
			limit = {
				has_character_flag = reaving_duel_target
			}
			clr_character_flag = reaving_duel_target
			FROM = { 
				clr_character_flag = reaving_duel 
				if = {
					limit = { is_alive = yes }
					remove_trait = on_reaving
				}	
				clr_character_flag = disputed_lands_raid
				clr_character_flag = north_essos_raid
				clr_character_flag = summer_sea_raid
				clr_character_flag = slavers_bay_raid
				clr_character_flag = reaving_village_raid
				clr_character_flag = reaving_ship_attack
				clr_character_flag = do_not_disturb
				if = {
					limit = { has_character_flag = reaving_begins }
					any_opinion_modifier_target = {
						limit = {
							trait = on_reaving
							has_opinion_modifier = { who = PREV modifier = opinion_on_reaving }
						}
						hidden_tooltip = { character_event = { id = raid_events.23 days = 1 } }
					}	
				}
				random_opinion_modifier_target = {
					limit = { 
						has_character_flag = reaving_begins
						reverse_has_opinion_modifier = { who = ROOT modifier = opinion_on_reaving } 
					}
					if = {
						limit = { ai = no }
						hidden_tooltip = { character_event = { id = raid_events.23 days = 1 } }
					}	
					any_opinion_modifier_target = {
						limit = {
							trait = on_reaving
							NOT = { character = FROM }
							has_opinion_modifier = { who = PREV modifier = opinion_on_reaving }
							ai = no
						}
						hidden_tooltip = { character_event = { id = raid_events.23 days = 1 } }
					}	
				}
			}	
		}
		###End Reaving Duel
		
		###Regency Duel
		if = {
			limit = { has_character_flag = duelist_regent }
			if = {
				limit = { FROM = { is_alive = no } }
				character_event = { id = 61225 days = 1 }
			}
			if = {
				limit = { FROM = { is_alive = yes } }
				character_event = { id = 61226 days = 1 }
			}
			clr_character_flag = duelist_regent
		}
		if = {
			limit = { has_character_flag = duelist_courtier }
			if = {
				limit = { FROM = { is_alive = no } }
				character_event = { id = 61228 days = 1 }
			}
			if = {
				limit = { FROM = { is_alive = yes } }
				character_event = { id = 61229 days = 1 }
			}
			clr_character_flag = duelist_courtier
		}

		###Wikid friendly Duel
		if = {
			limit = { has_character_flag = wikid_friendly_duel_player }
			character_event = { id = wikid.181 } # I have beat my companion
			clr_character_flag = wikid_friendly_duel_player
			FROM = { clr_character_flag = wikid_friendly_duel_companion }		
		}
		if = {
			limit = { has_character_flag = wikid_friendly_duel_companion }
			FROM = { character_event = { id = wikid.180 } } # I have lost to my companion
			clr_character_flag = wikid_friendly_duel_companion
			FROM = { clr_character_flag = wikid_friendly_duel_player }
		}
		
		###Wikid Pirate Duel v player
		if = {
			limit = {
				or = {
					has_character_flag = wikid_pirate_vs_player
					has_character_flag = wikid_player_vs_pirate
				}
			}
			#Player won, proceede
			if = { 
				limit = { 
					has_character_flag = wikid_player_vs_pirate
				}
				set_character_flag = wikid_player_won_pirates
				narrative_event = { id = wikid.32 } 				
			}
			#Pirate won vs player. Companion also dies
			if = {  
				limit = { 
					has_character_flag = wikid_pirate_vs_player					
				}
				any_playable_ruler = {
					any_courtier = {
						limit = { trait = wikid }
						death = { death_reason = death_duel killer = root }
					}
				}
				clr_character_flag = wikid_pirate1	#pirate created in e_rebels - wikid.26			
			}
			clr_character_flag = wikid_pirate_vs_player
			clr_global_flag = someone_doing_valyrian_sword
			clr_character_flag = wikid_player_vs_pirate
		}
		
		###Wikid Pirate Duel v companion
		if = {
			limit = {
				or = {
					has_character_flag = wikid_pirate_vs_companion
					has_character_flag = wikid_companion_vs_pirate
				}
			}
			wikid = {
				limit = {
					is_alive = yes
					ai = no
					is_ruler = yes
				}
				character_event = { id = wikid.30 } #trigger informs player and starts player v pirate
			}	
			clr_character_flag = wikid_pirate_vs_companion
			clr_character_flag = wikid_companion_vs_pirate
		}
		
		###Wikid companion betrays
		if = { 
			limit = { 
				has_character_flag = wikid_betrayal_companion 
			}
			banish = yes
			remove_trait = wikid
			clr_global_flag = someone_doing_valyrian_sword
			clr_character_flag = wikid_betrayal_companion 		
			FROM = { clr_character_flag = wikid_betrayal_player }	
			if = { #companion dies anyway so unique sword isnt floating			
				limit = {
					NOT = { has_artifact = valyrian_steel }
					any_artifact = { has_artifact_flag = valyrian_steel }
				}
				add_trait = has_missing
				death = { 
					death_reason = death_trait
				}
			}					
		}
		if = {
			limit = { 
				has_character_flag = wikid_betrayal_player
			}
			clr_character_flag = wikid_betrayal_player
			FROM = { clr_character_flag = wikid_betrayal_companion  }
			if = {
				limit = { NOT = { has_character_flag = wikid_labyrinth_ending } }
				narrative_event = { id = wikid.47 }
			}
			if = {
				limit = { has_character_flag = wikid_labyrinth_ending }
				narrative_event = { id = wikid.119 }
			}
		}
		
		###Kingsguard Drama Duel
		if = {
			limit = { has_character_flag = rogue_kg_vs_KG }
			top_liege = {
				character_event = { id = kingsguard.39 days = 1 }
			}
			clr_character_flag = rogue_kg_vs_KG
			FROM = { clr_character_flag = KG_vs_rogue_kg }
		}
		if = {
			limit = { has_character_flag = KG_vs_rogue_kg }
			top_liege = {
				character_event = { id = kingsguard.40 days = 1 }
			}
			clr_character_flag = KG_vs_rogue_kg
			FROM = { 
				clr_character_flag = rogue_kg_vs_KG 
				if = {
					limit = { is_alive = no }
					any_dynasty_member = {
						limit = { is_ruler = yes }
						character_event = { id = kingsguard.47 } #Your kin in the kingsguard died trying to kill the king! (Notification)
					}
				}
			}
		}
		if = {
			limit = { has_character_flag = rogue_kg_vs_KING }
			character_event = { id = kingsguard.46 }
			random_dynasty_member = {
				limit = {
					NOT = { character = ROOT }
					demesne_size = 1
				}
				character_event = { id = kingsguard.46 days = 1 }
				set_character_flag = flee_target
			}
			clr_character_flag = rogue_kg_vs_KING
			FROM = { 
				clr_character_flag = KING_vs_rogue_kg 
				any_realm_lord = {
					limit = { 
						NOT = { has_character_flag = flee_target }
					}
					character_event = { id = kingsguard.48 days = 1 }
				}
			}
		}
		if = {
			limit = { has_character_flag = KING_vs_rogue_kg }
			character_event = { id = kingsguard.44 days = 1 }
			clr_character_flag = KING_vs_rogue_kg
			FROM = { 
				clr_character_flag = rogue_kg_vs_KING 
				if = {
					limit = { is_alive = no }
					any_dynasty_member = {
						limit = { is_ruler = yes }
						character_event = { id = kingsguard.47 } #Your kin in the kingsguard died trying to kill the king! (Notification)
					}
				}
			}
		}
		
		###Kingsmoot Duel
		if = {
			limit = { has_character_flag = kingsmoot_duel }
			character_event = { id = kingsmoot.25 days = 1 }
			FROM = { character_event = { id = kingsmoot.26 days = 1 } }
		}
		
		###Spearwife hunting duel
		if = {
			limit = { has_character_flag = stealing_spearwife  }
			character_event = { id = wildling.52 days = 1 }
		}
		if = {
			limit = { FROM = { has_character_flag = stealing_spearwife } }
			FROM = { character_event = { id = wildling.53 days = 1 } }
			remove_trait = forbid_marriage
		}
		
		###Bloodrider revenge duel
		if = {
			limit = { has_character_flag = bloodrider_revenge_duel }
			character_event = { id = dothraki.414 days = 1 }
		}
		if = {
			limit = { FROM = { has_character_flag = bloodrider_revenge_duel } }
			FROM = { clr_character_flag = bloodrider_revenge_duel }
		}
		
		###Reaving sword duel
		if = {
			limit = { has_character_flag = reaving_sword_fight }
			character_event = { id = raid_events.673 days = 1 }
			clr_character_flag = reaving_sword_fight
			FROM = { clr_character_flag = reaving_sword_fight_target }
		}
		if = {
			limit = { has_character_flag = reaving_sword_fight_target }
			character_event = { id = raid_events.677 days = 1 }
			clr_character_flag = reaving_sword_fight_target
			FROM = { clr_character_flag = reaving_sword_fight }
		}
		
		###Mountain Clansmen duel
		if = {
			limit = { has_character_flag = clansmen_hunt_duel }
			if = {
				limit = { has_character_flag = marshal_clansmen_hunt }
				liege = { character_event = { id = mountain_clans.12 days = 1 } }
			}
			character_event = { id = mountain_clans.11 days = 1 }
			clr_character_flag = clansmen_hunt_duel
			FROM = { clr_character_flag = clansmen_hunt_duel_target }
		}
		if = {
			limit = { has_character_flag = clansmen_hunt_duel_target }	
			clr_character_flag = clansmen_hunt_duel_target
			FROM = { 
				clr_character_flag = clansmen_hunt_duel 
				liege = {
					if = {
						limit = { has_character_flag = clansmen_hunt }
						character_event = { id = mountain_clans.13 days = 1 }
					}
				}	
			}
		}
		
		###Tourney rival drama duel
		if = {
			limit = { has_character_flag = tourney_duel_challenger }
			character_event = { id = 70065 days = 1 }
			clr_character_flag = tourney_duel_challenger 
			FROM = { 
				clr_character_flag = tourney_duel_target
				character_event = { id = 70068 days = 1 }
			}
			hidden_tooltip = {
				random_opinion_modifier_target = {
					limit = {
						has_character_flag = tourny_in_progress
						reverse_has_opinion_modifier = { who = PREV modifier = opinion_attending_tournament }
					}
					character_event = { id = 70071 } 
				}
			}
		}
		if = {
			limit = { has_character_flag = tourney_duel_target }
			character_event = { id = 70070 days = 1 }
			clr_character_flag = tourney_duel_target
			FROM = { 
				clr_character_flag = tourney_duel_challenger
				character_event = { id = 70067 days = 1 }
			}
			hidden_tooltip = {
				random_opinion_modifier_target = {
					limit = {
						has_character_flag = tourny_in_progress
						reverse_has_opinion_modifier = { who = PREV modifier = opinion_attending_tournament }
					}
					character_event = { id = 70073 } 
				}
			}
		}
		
		###Way of Life Focus Duel
		if = {
			limit = { 
				has_character_flag = WOL_focus_duel
			}
			long_character_event = { id = WoL.11006 days = 1 }
			clr_character_flag = WOL_focus_duel
			FROM = { 
				long_character_event = { id = WoL.11007 days = 1 }
				clr_character_flag = WOL_focus_duel
			}			
		}
		
		###Way of Life lover Duel
		if = {
			limit = { 
				has_character_flag = wol_lover_duel_accuser
			}
			character_event = { id = WoL.1036 }
			clr_character_flag = wol_lover_duel_accuser			
		}
		if = {
			limit = { 
				has_character_flag = wol_lover_duel_lover
			}
			character_event = { id = WoL.1039 }
			clr_character_flag = wol_lover_duel_lover		
		}
		
		###Friends Rivals event duel
		if = {
			limit = { 
				has_character_flag = friends_rivals_duel
			}	
			clr_character_flag = friends_rivals_duel		
			FROM = { clr_character_flag = friends_rivals_duel }
		}
		
		###Dothraki wedding duel
		if = {
			limit = { 
				has_character_flag = dothraki_wedding_duel_death
			}
			character_event = { id = wedding.49 }
			clr_character_flag = dothraki_wedding_duel_death		
		}
		
		###Laughing Storm Duel
		if = {
			limit = { 
				has_character_flag = laughing_storm_duel
			}
			if = {
				limit = { trait = kingsguard }
				e_iron_throne = { holder_scope = { character_event = { id = ninepenny_kings.9 } } }
			}
			if = {
				limit = { has_landed_title = k_stormlands }
				character_event = { id = ninepenny_kings.11 }
			}
			clr_character_flag = laughing_storm_duel
			FROM = { clr_character_flag = laughing_storm_duel }
		}
		
		###Trial By Seven
		if = {
			limit = { 
				has_character_flag = trial_by_seven_duel
			}
			character_event = { id = trial_by_seven.11 }
			FROM = { 
				clr_character_flag = trial_by_seven_duel
				set_character_flag = trial_by_seven_defeated 
			}
		}
		
		###Northern Melee
		if = {
			limit = { 
				has_character_flag = in_melee
			}
			if = {
				limit = {
					FROM = { is_alive = no }
					has_character_flag = flag_killed_opponent
				}
				set_character_flag = melee_killed_opponent
			}
			character_event = { id = northern_melee.16 days = 1 }
		}
		
		###Game Book DLC duel
		if = {
			limit = { 
				has_character_flag = gbc_duel
			}
			clr_character_flag = gbc_duel
			FROM = { clr_character_flag = gbc_duel_rival }
			character_event = { id = GBC.130 }
		}
		if = {
			limit = { 
				has_character_flag = gbc_duel_rival
			}
			clr_character_flag = gbc_duel_rival
			FROM = { 
				clr_character_flag = gbc_duel
				character_event = { id = GBC.131 } 
			}
		}
		
		# Reapers Suicide Duel
		if = {
			limit = { 
				has_character_flag = rip_suicide_duel
			}
			clr_character_flag = rip_suicide_duel
			set_character_flag = won_suicide_duel
			character_event = { id = RIP.30205 }
			FROM = { 
				clr_character_flag = rip_suicide_duel_rival 
			}		
		}
		if = {
			limit = { 
				has_character_flag = rip_suicide_duel_rival 
			}
			clr_character_flag = rip_suicide_duel_rival 		
			FROM = { 
				clr_character_flag = rip_suicide_duel
				set_character_flag = lost_suicide_duel
				character_event = { id = RIP.30205 }
			}		
		}
		
		# Reapers Immortal Duel
		if = {
			limit = { 
				has_character_flag = RIP_immortal_duel
			}
			character_event = { id = RIP.30302 }
			FROM = { 
				clr_character_flag = RIP_immortal_duel_rival 
			}		
		}
		if = {
			limit = { 
				has_character_flag = RIP_immortal_duel_rival 
			}
			clr_character_flag = RIP_immortal_duel_rival 	
			FROM = { 
				clr_character_flag = RIP_immortal_duel
				character_event = { id = RIP.30307 }
				if = {
					limit = { is_alive = no }
					random = {
						chance = 50
						ROOT = { leave_court_and_die_effect = yes }
					}
				}
			}		
		}
		
		#White Walker Duel
		if = {
			limit = { 
				has_character_flag = white_walker_duel
			}
			clr_character_flag = white_walker_duel
			FROM = { clr_character_flag = white_walker_duel_target }
		}
		if = {
			limit = { 
				has_character_flag = white_walker_duel_target
			}
			clr_character_flag = white_walker_duel_target
			FROM = { clr_character_flag = white_walker_duel }
		}
		
		#############################
		# Special Context Flag Cleanup
		#############################
		clr_character_flag = flag_duel_friendly
		FROM = { clr_character_flag = flag_duel_friendly }
		clr_character_flag = flag_duel_to_the_death
		FROM = { clr_character_flag = flag_duel_to_the_death }
		clr_character_flag = duel_context_battle
		FROM = { clr_character_flag = duel_context_battle }
		#############################
		# Clear kill/mercy flags
		clr_character_flag = flag_killed_opponent
		clr_character_flag = flag_spared_opponent
	}
}