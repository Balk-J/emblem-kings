namespace = fe4_dynasty

# For creating dummy characters to replace originals when they vanish and pop up as someone else's kid.
# Clones need the same DNA and traits as the originals. They should be created at whatever age the original was when they vanished.

# Brigid clone
character_event = {
	id = fe4_dynasty.1
	
	hide_window = yes
	is_triggered_only = yes
	
	option = {
		name = OK
		
		#d_jungby = {
			#holder_scope = {
			c_1078 = { # Ring
				create_character = { 
					name = "Brigid"
					dna="cdaijvdbhab"
					properties="cf0hie00000000"
					culture = THIS
					religion = THIS
					female = yes
					#dynasty = 1007
					age = 5
					trait=twin
					trait=went_missing
					genetic_father = THIS
					genetic_mother = 1079
				}
				c_1082 = {
					mother_even_if_dead = {
						new_character = { 
							set_father = PREVPREVPREV
							set_mother = PREV
							dynasty = PREVPREVPREV
							#death = { death_reason=death_accident_drowning }
							character_event = { id = fe4_dynasty.14 days = 1 }
						}
					}
				}
			}
			#}
		#}
	}
}

# Remove Brigid clone
# Get the right character
character_event = {
	id = fe4_dynasty.2
	
	hide_window = yes
	is_triggered_only = yes
	
	option = {
		name = OK

		random_character = {
			limit = {
				has_character_flag=is_fe4_brigid
			}
			character_event = { id = fe4_dynasty.3 }
		}
	}
}

# Remove clone and replace with original
character_event = {
	id = fe4_dynasty.3
	
	hide_window = yes
	is_triggered_only = yes
	
	option = {
		name = OK

		went_missing = {
			limit = {
				dynasty = 1007 # Jungby. Not ideal but probably the best we can do to get the clone. Will be an issue if we add an event later to disappear people dynamically.
			}
			father_even_if_dead = { ROOT = { set_father = PREV } }
			mother_even_if_dead = { ROOT = { set_mother = PREV } }
			
			ROOT = { 
				set_name = "Brigid"
				dynasty = PREV 
				character_event = { id = util.2 }
			}
			any_child_even_if_dead = {
				set_mother = ROOT
			}
			
			dynasty_head = {
				ROOT = {
					move_character = PREV					
				}
				#character_event = { id = fe4_family.1 }
			}
			
			remove_trait = went_missing
			dynasty = 0
			set_father = 0
			set_mother = 0
		}
	}
}

# Brigid clone for post Battle of Belhalla
character_event = {
	id = fe4_dynasty.4
	
	hide_window = yes
	is_triggered_only = yes
	
	option = {
		name = OK
		
		c_1082 = {
			father_even_if_dead = {
				create_character = { 
					name = "Brigid"
					dna="cdaijvdbhab"
					properties="cf0hie00000000"
					culture = PREV
					religion = PREV
					female = yes
					#dynasty = 1007
					age = 22
				}
				c_1082 = {
					mother_even_if_dead = {
						new_character = { 
							add_trait="tough_soldier"
							add_trait="aggressive_leader"
							add_trait="rough_terrain_leader"
							add_trait="base_class_archer"
							add_trait="class_sniper_female"
							add_trait="holy_blood_major_ulir"
							add_trait="twin"
							add_trait="went_missing"

							add_trait="kind"
							add_trait="just"
							add_trait="wroth"
							add_trait="honest"
							add_trait="charitable"

							set_father = PREVPREVPREV
							set_mother = PREV
							dynasty = PREVPREVPREV
							
							c_1081 = {
								any_child_even_if_dead = {
									set_mother = PREVPREV
								}
							}
							
							#death = { death_reason=death_missing }
							character_event = { id = fe4_dynasty.13 days = 1 }
						}
					}
				}
			}
		}
	}
}

# Silvia clone
character_event = {
	id = fe4_dynasty.5
	
	hide_window = yes
	is_triggered_only = yes
	
	option = {
		name = OK
		
		c_1042 = {
			create_character = { 
				name = "Silvia"
				dna="bjhjcofdjcb"
				properties="ce0h0e00000000"
				culture = grannvalean # Need to hardcode these since her father is probably dead when this runs
				religion = church_of_edda
				female = yes
				age = 5
				trait=went_missing
			}
			new_character = { 
				set_father = PREV
				dynasty = PREV
				#death = { death_reason=death_missing }
				character_event = { id = fe4_dynasty.13 days = 1 }
			}
		}
	}
}

# Remove Silvia clone
# Get the right character
character_event = {
	id = fe4_dynasty.6
	
	hide_window = yes
	is_triggered_only = yes
	
	option = {
		name = OK

		random_character = {
			limit = {
				has_character_flag=is_fe4_silvia
			}
			character_event = { id = fe4_dynasty.7 }
		}
	}
}
# Remove clone and replace with original
character_event = {
	id = fe4_dynasty.7
	
	hide_window = yes
	is_triggered_only = yes
	
	option = {
		name = OK

		went_missing = {
			limit = {
				dynasty = 1003 # Edda
			}
			father_even_if_dead = { ROOT = { set_father = PREV } }
			
			ROOT = { 
				dynasty = PREV 
				character_event = { id = util.2 }
			}
			
			dynasty_head = {
				ROOT = {
					move_character = PREV					
				}
				#character_event = { id = fe4_family.1 }
			}
			
			remove_trait = went_missing
			dynasty = 0
			set_father = 0
		}
	}
}

# Altena clone
character_event = {
	id = fe4_dynasty.8
	
	hide_window = yes
	is_triggered_only = yes
	
	option = {
		name = OK
		
		c_1160 = {
			create_character = { 
				name = "Altena"
				dna="bhahcvgadbx"
				properties="cc0hak00000000"
				culture = mansterian # Need to hardcode these since her father is probably dead when this runs
				religion = church_of_edda
				female = yes
				age = 4
				trait=went_missing
			}
			# Why doesn't any_spouse_even_if_dead work here?
			c_1033 = {
				new_character = { 
					set_father = PREVPREV
					set_mother = PREV
					dynasty = PREVPREV
#					death = {
#						death_reason=death_execution
#						killer=1154 # Travant, Yied Massacre
#					}
					character_event = { id = fe4_dynasty.15 days = 1 }
				}
			}
		}
	}
}

# Remove Altena clone
# Get the right character
character_event = {
	id = fe4_dynasty.9
	
	hide_window = yes
	is_triggered_only = yes
	
	option = {
		name = OK

		random_character = {
			limit = {
				has_character_flag=is_fe4_altena
			}
			character_event = { id = fe4_dynasty.10 }
		}
	}
}

# Remove clone and replace with original
character_event = {
	id = fe4_dynasty.10
	
	hide_window = yes
	is_triggered_only = yes
	
	option = {
		name = OK

		went_missing = {
			limit = {
				dynasty = 1012 # Leonster
			}
			father_even_if_dead = { ROOT = { set_father = PREV } }
			mother_even_if_dead = { ROOT = { set_mother = PREV } }
			
			ROOT = { 
				dynasty = PREV 
				character_event = { id = util.2 }
			}
			
			dynasty_head = {
				ROOT = {
					move_character = PREV					
				}
				#character_event = { id = fe4_family.1 }
			}
			
			remove_trait = went_missing
			dynasty = 0
			set_father = 0
			set_mother = 0
		}
	}
}

# Flip Deirdre's dynasty
# TODO: review localization!
character_event = {
	id = fe4_dynasty.11
	desc = fe4_dynasty.11.desc
	picture = GFX_evt_marriage
	is_triggered_only = yes
		
	option = {
		name = fe4_dynasty.11.A
		c_1030 = { # Kurth
			ROOT = {
				set_father = PREV
				dynasty = PREV
			}
		}

		dynasty_head = {
			if = {
				limit = { independent = yes }
				narrative_event = { id = fe4_dynasty.12 }
				any_vassal = {
					limit = { NOT = { character = ROOT } }
					narrative_event = { id = fe4_dynasty.12 }
				}
			}else = {
				top_liege = {
					narrative_event = { id = fe4_dynasty.12 }
					any_vassal = {
						limit = { NOT = { character = ROOT } }
						narrative_event = { id = fe4_dynasty.12 }
					}
				}
			}

		}
	}			
}

narrative_event = {
	id = fe4_dynasty.12
	title = fe4_dynasty.12.title
	desc = fe4_dynasty.12.desc
	picture = GFX_evt_marriage
	
	is_triggered_only = yes
	
	option = {
		name = fe4_dynasty.12.A
		trigger = {
			NOT = {
				any_spouse = {
					character = FROM
				}
			}
		}
	}	
	
	option = {
		name = fe4_dynasty.12.B
		trigger = {
			any_spouse = {
				character = FROM
			}
		}
	}		
}

# Event to kill clones, since killing them in the event that creates them doesn't *keep* them dead.
# No death date gets saved, so they come back to life when a save is loaded.
character_event = {
	id = fe4_dynasty.13
	hide_window = yes
	is_triggered_only = yes	
	option = {
		name = OK
		death = { death_reason=death_missing }
	}
}
character_event = {
	id = fe4_dynasty.14
	hide_window = yes
	is_triggered_only = yes	
	option = {
		name = OK
		death = { death_reason=death_accident_drowning }
	}
}
character_event = {
	id = fe4_dynasty.15
	hide_window = yes
	is_triggered_only = yes	
	option = {
		name = OK
		death = {
			death_reason=death_execution
			killer=1154 # Travant, Yied Massacre
		}
	}
}